/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.github.rohansuri.art.examples.ip.lookup;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.InetAddress;
import java.util.Arrays;
import java.util.Map;
import java.util.NavigableMap;
import java.util.Optional;
import java.util.function.Supplier;

import com.github.rohansuri.art.AdaptiveRadixTree;

/*
	Problem 7 from https://algs4.cs.princeton.edu/52trie/

	IP lookup by country.
	Use the data file ip-to-country.csv to determine what country a given IP address is coming from.
	The data file has five fields (begining of IP address range, ending of IP address range, two character country code, three character country code, and country name.
	See The IP-to-country website. The IP addresses are non-overlapping.
	Such a database tool can be used for: credit card fraud detection,
	spam filtering, auto-selection of language on a web site, and web server log analysis.
 */
public class IPLookup {
	private static final String FILENAME = "/ip-by-country.csv";
	private NavigableMap<InetAddress, Record> m;

	IPLookup(Supplier<NavigableMap<InetAddress, Record>> s) throws IOException {
		m = s.get();
		load();
	}

	Optional<String> lookup(InetAddress lookup) {
		Map.Entry<InetAddress, Record> entry = m.floorEntry(lookup);
		if (entry != null) {
			InetAddress end = entry.getValue().getEnd();
			if (InetAddressComparator.INSTANCE.compare(end, lookup) >= 0) {
				return Optional.of(entry.getValue().getCountry());
			}
		}
		return Optional.empty();
	}

	private void load() throws IOException {
		try (BufferedReader br = new BufferedReader(new InputStreamReader(IPLookup.class
				.getResourceAsStream(FILENAME)))) {
			String line = br.readLine(); // read column header
			while ((line = br.readLine()) != null) {
				String[] values = line.split(",");
				String start = values[0].replace("\"", "");
				String end = values[1].replace("\"", "");
				String country = values[5].replace("\"", "");
				// System.out.println(start + ", " + end + ", " + country);
				InetAddress startAddress = InetAddress.getByName(start);
				Record r = new Record(startAddress,
						InetAddress.getByName(end),
						country);
				m.put(startAddress, r);
			}
		}
	}

	NavigableMap<InetAddress, Record> map() {
		return m;
	}
}

<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:black; }
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text x="600" y="24" text-anchor="middle" style="font-size:17px">Flame Graph</text>
<text x="10" y="949" id="details"> </text>
<text x="10" y="24" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer">Reset Zoom</text>
<text x="1090" y="24" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer">Search</text>
<text x="1090" y="949" id="matched"> </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (29872 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#f67575" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>G1BarrierSet::invalidate(MemRegion) (27 samples, 0.09%)</title><rect x="10.2" y="899.0" width="1.1" height="15" fill="#c4c439" rx="2" ry="2"/>
<text x="13.2" y="910.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (44 samples, 0.15%)</title><rect x="12.1" y="899.0" width="1.7" height="15" fill="#dada41" rx="2" ry="2"/>
<text x="15.1" y="910.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (40 samples, 0.13%)</title><rect x="13.8" y="899.0" width="1.6" height="15" fill="#dada41" rx="2" ry="2"/>
<text x="16.8" y="910.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (50 samples, 0.17%)</title><rect x="15.4" y="899.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="18.4" y="910.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>InstanceKlass::allocate_instance(Thread*) (44 samples, 0.15%)</title><rect x="15.6" y="883.0" width="1.7" height="15" fill="#b9b935" rx="2" ry="2"/>
<text x="18.6" y="894.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (43 samples, 0.14%)</title><rect x="15.6" y="867.0" width="1.7" height="15" fill="#c1c138" rx="2" ry="2"/>
<text x="18.6" y="878.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>MemAllocator::allocate() const (43 samples, 0.14%)</title><rect x="15.6" y="851.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="18.6" y="862.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (36 samples, 0.12%)</title><rect x="15.8" y="835.0" width="1.4" height="15" fill="#bebe37" rx="2" ry="2"/>
<text x="18.8" y="846.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/lang/Thread.run (28808 samples, 96.44%)</title><rect x="18.1" y="899.0" width="1138.0" height="15" fill="#53e653" rx="2" ry="2"/>
<text x="21.1" y="910.0">java/lang/Thread.run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (28808 samples, 96.44%)</title><rect x="18.1" y="883.0" width="1138.0" height="15" fill="#4ee24e" rx="2" ry="2"/>
<text x="21.1" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (28808 samples, 96.44%)</title><rect x="18.1" y="867.0" width="1138.0" height="15" fill="#57ea57" rx="2" ry="2"/>
<text x="21.1" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/concurrent/FutureTask.run (28808 samples, 96.44%)</title><rect x="18.1" y="851.0" width="1138.0" height="15" fill="#47dc47" rx="2" ry="2"/>
<text x="21.1" y="862.0">java/util/concurrent/FutureTask.run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/concurrent/Executors$RunnableAdapter.call (28808 samples, 96.44%)</title><rect x="18.1" y="835.0" width="1138.0" height="15" fill="#50e450" rx="2" ry="2"/>
<text x="21.1" y="846.0">java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/concurrent/FutureTask.run (28808 samples, 96.44%)</title><rect x="18.1" y="819.0" width="1138.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.1" y="830.0">java/util/concurrent/FutureTask.run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (28808 samples, 96.44%)</title><rect x="18.1" y="803.0" width="1138.0" height="15" fill="#68fa68" rx="2" ry="2"/>
<text x="21.1" y="814.0">org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (28808 samples, 96.44%)</title><rect x="18.1" y="787.0" width="1138.0" height="15" fill="#58ea58" rx="2" ry="2"/>
<text x="21.1" y="798.0">org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/lang/reflect/Method.invoke (28808 samples, 96.44%)</title><rect x="18.1" y="771.0" width="1138.0" height="15" fill="#5def5d" rx="2" ry="2"/>
<text x="21.1" y="782.0">java/lang/reflect/Method.invoke</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (28808 samples, 96.44%)</title><rect x="18.1" y="755.0" width="1138.0" height="15" fill="#3acf3a" rx="2" ry="2"/>
<text x="21.1" y="766.0">jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (28808 samples, 96.44%)</title><rect x="18.1" y="739.0" width="1138.0" height="15" fill="#56e956" rx="2" ry="2"/>
<text x="21.1" y="750.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (28808 samples, 96.44%)</title><rect x="18.1" y="723.0" width="1138.0" height="15" fill="#32c832" rx="2" ry="2"/>
<text x="21.1" y="734.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke0</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/string/generated/LargeData_insert_jmhTest.insert_AverageTime (28808 samples, 96.44%)</title><rect x="18.1" y="707.0" width="1138.0" height="15" fill="#40d540" rx="2" ry="2"/>
<text x="21.1" y="718.0">com/github/rohansuri/art/string/generated/LargeData_insert_jmhTest.insert_AverageTime</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/string/generated/LargeData_insert_jmhTest.insert_avgt_jmhStub (28808 samples, 96.44%)</title><rect x="18.1" y="691.0" width="1138.0" height="15" fill="#3acf3a" rx="2" ry="2"/>
<text x="21.1" y="702.0">com/github/rohansuri/art/string/generated/LargeData_insert_jmhTest.insert_avgt_jmhStub</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/string/LargeData.insert (28807 samples, 96.43%)</title><rect x="18.2" y="675.0" width="1137.9" height="15" fill="#62f462" rx="2" ry="2"/>
<text x="21.2" y="686.0">com/github/rohansuri/art/string/LargeData.insert</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/AdaptiveRadixTree.put (28558 samples, 95.60%)</title><rect x="22.1" y="659.0" width="1128.1" height="15" fill="#3bd03b" rx="2" ry="2"/>
<text x="25.1" y="670.0">com/github/rohansuri/art/AdaptiveRadixTree.put</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/AdaptiveRadixTree.put (25430 samples, 85.13%)</title><rect x="26.5" y="643.0" width="1004.5" height="15" fill="#4ade4a" rx="2" ry="2"/>
<text x="29.5" y="654.0">com/github/rohansuri/art/AdaptiveRadixTree.put</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/AdaptiveRadixTree.put (24390 samples, 81.65%)</title><rect x="55.0" y="627.0" width="963.4" height="15" fill="#39cf39" rx="2" ry="2"/>
<text x="58.0" y="638.0">com/github/rohansuri/art/AdaptiveRadixTree.put</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/AdaptiveRadixTree.addChild (1324 samples, 4.43%)</title><rect x="188.3" y="611.0" width="52.3" height="15" fill="#38cd38" rx="2" ry="2"/>
<text x="191.3" y="622.0">com/g..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/AdaptiveRadixTree.replace (392 samples, 1.31%)</title><rect x="200.0" y="595.0" width="15.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.0" y="606.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node16.replace (49 samples, 0.16%)</title><rect x="209.8" y="579.0" width="1.9" height="15" fill="#3fd43f" rx="2" ry="2"/>
<text x="212.8" y="590.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/Arrays.binarySearch (43 samples, 0.14%)</title><rect x="210.0" y="563.0" width="1.7" height="15" fill="#50e450" rx="2" ry="2"/>
<text x="213.0" y="574.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/Arrays.binarySearch0 (43 samples, 0.14%)</title><rect x="210.0" y="547.0" width="1.7" height="15" fill="#64f664" rx="2" ry="2"/>
<text x="213.0" y="558.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node4.replace (32 samples, 0.11%)</title><rect x="211.7" y="579.0" width="1.3" height="15" fill="#56e956" rx="2" ry="2"/>
<text x="214.7" y="590.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>jbyte_disjoint_arraycopy (26 samples, 0.09%)</title><rect x="213.2" y="579.0" width="1.0" height="15" fill="#d84949" rx="2" ry="2"/>
<text x="216.2" y="590.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>oop_disjoint_arraycopy (32 samples, 0.11%)</title><rect x="214.2" y="579.0" width="1.2" height="15" fill="#eb6565" rx="2" ry="2"/>
<text x="217.2" y="590.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node16.addChild (239 samples, 0.80%)</title><rect x="215.4" y="595.0" width="9.5" height="15" fill="#51e451" rx="2" ry="2"/>
<text x="218.4" y="606.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/Arrays.binarySearch (227 samples, 0.76%)</title><rect x="215.9" y="579.0" width="9.0" height="15" fill="#4fe34f" rx="2" ry="2"/>
<text x="218.9" y="590.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/Arrays.binarySearch0 (227 samples, 0.76%)</title><rect x="215.9" y="563.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="218.9" y="574.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node16.grow (60 samples, 0.20%)</title><rect x="224.9" y="595.0" width="2.4" height="15" fill="#43d843" rx="2" ry="2"/>
<text x="227.9" y="606.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node48.&lt;init&gt; (59 samples, 0.20%)</title><rect x="224.9" y="579.0" width="2.4" height="15" fill="#60f260" rx="2" ry="2"/>
<text x="227.9" y="590.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node4.addChild (228 samples, 0.76%)</title><rect x="227.3" y="595.0" width="9.0" height="15" fill="#51e451" rx="2" ry="2"/>
<text x="230.3" y="606.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node4.grow (73 samples, 0.24%)</title><rect x="236.3" y="595.0" width="2.9" height="15" fill="#60f260" rx="2" ry="2"/>
<text x="239.3" y="606.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node16.&lt;init&gt; (73 samples, 0.24%)</title><rect x="236.3" y="579.0" width="2.9" height="15" fill="#4ade4a" rx="2" ry="2"/>
<text x="239.3" y="590.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (33 samples, 0.11%)</title><rect x="237.9" y="563.0" width="1.3" height="15" fill="#f97979" rx="2" ry="2"/>
<text x="240.9" y="574.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node48.addChild (34 samples, 0.11%)</title><rect x="239.2" y="595.0" width="1.3" height="15" fill="#42d742" rx="2" ry="2"/>
<text x="242.2" y="606.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/AdaptiveRadixTree.lazyExpansion (1943 samples, 6.50%)</title><rect x="240.6" y="611.0" width="76.7" height="15" fill="#47db47" rx="2" ry="2"/>
<text x="243.6" y="622.0">com/gith..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/AdaptiveRadixTree.addTwoLazyLeavesToPathCompressedNode (902 samples, 3.02%)</title><rect x="240.6" y="595.0" width="35.6" height="15" fill="#62f462" rx="2" ry="2"/>
<text x="243.6" y="606.0">com..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node4.addChild (902 samples, 3.02%)</title><rect x="240.6" y="579.0" width="35.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="243.6" y="590.0">com..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node16.addChild (44 samples, 0.15%)</title><rect x="256.8" y="563.0" width="1.7" height="15" fill="#36cb36" rx="2" ry="2"/>
<text x="259.8" y="574.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node4.addChild (84 samples, 0.28%)</title><rect x="258.5" y="563.0" width="3.4" height="15" fill="#6afc6a" rx="2" ry="2"/>
<text x="261.5" y="574.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (356 samples, 1.19%)</title><rect x="262.1" y="563.0" width="14.1" height="15" fill="#e45c5c" rx="2" ry="2"/>
<text x="265.1" y="574.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/AdaptiveRadixTree.setLongestCommonPrefix (1029 samples, 3.44%)</title><rect x="276.2" y="595.0" width="40.7" height="15" fill="#37cc37" rx="2" ry="2"/>
<text x="279.2" y="606.0">com..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node16.replace (79 samples, 0.26%)</title><rect x="295.4" y="579.0" width="3.1" height="15" fill="#3dd23d" rx="2" ry="2"/>
<text x="298.4" y="590.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node4.replace (147 samples, 0.49%)</title><rect x="298.5" y="579.0" width="5.8" height="15" fill="#59ec59" rx="2" ry="2"/>
<text x="301.5" y="590.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (308 samples, 1.03%)</title><rect x="304.7" y="579.0" width="12.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="307.7" y="590.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/AdaptiveRadixTree.matchCompressedPath (4469 samples, 14.96%)</title><rect x="317.3" y="611.0" width="176.6" height="15" fill="#46db46" rx="2" ry="2"/>
<text x="320.3" y="622.0">com/github/rohansuri/ar..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/AdaptiveRadixTree.branchOutPessimistic (1333 samples, 4.46%)</title><rect x="429.3" y="595.0" width="52.7" height="15" fill="#35cb35" rx="2" ry="2"/>
<text x="432.3" y="606.0">com/g..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/AdaptiveRadixTree.removePessimisticLCPFromCompressedPath (1016 samples, 3.40%)</title><rect x="429.3" y="579.0" width="40.1" height="15" fill="#33c933" rx="2" ry="2"/>
<text x="432.3" y="590.0">com..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>jbyte_disjoint_arraycopy (44 samples, 0.15%)</title><rect x="467.7" y="563.0" width="1.7" height="15" fill="#e15656" rx="2" ry="2"/>
<text x="470.7" y="574.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node4.addChild (317 samples, 1.06%)</title><rect x="469.4" y="579.0" width="12.6" height="15" fill="#35cb35" rx="2" ry="2"/>
<text x="472.4" y="590.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node16.replace (41 samples, 0.14%)</title><rect x="474.5" y="563.0" width="1.6" height="15" fill="#40d540" rx="2" ry="2"/>
<text x="477.5" y="574.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node4.replace (52 samples, 0.17%)</title><rect x="476.1" y="563.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.1" y="574.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (94 samples, 0.31%)</title><rect x="478.3" y="563.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="481.3" y="574.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/AdaptiveRadixTree.replace (300 samples, 1.00%)</title><rect x="482.0" y="595.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="485.0" y="606.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node16.replace (86 samples, 0.29%)</title><rect x="486.0" y="579.0" width="3.4" height="15" fill="#41d641" rx="2" ry="2"/>
<text x="489.0" y="590.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/Arrays.binarySearch (70 samples, 0.23%)</title><rect x="486.7" y="563.0" width="2.7" height="15" fill="#52e552" rx="2" ry="2"/>
<text x="489.7" y="574.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/Arrays.binarySearch0 (70 samples, 0.23%)</title><rect x="486.7" y="547.0" width="2.7" height="15" fill="#48dc48" rx="2" ry="2"/>
<text x="489.7" y="558.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node4.replace (105 samples, 0.35%)</title><rect x="489.4" y="579.0" width="4.2" height="15" fill="#5ff15f" rx="2" ry="2"/>
<text x="492.4" y="590.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/AdaptiveRadixTree.replace (2390 samples, 8.00%)</title><rect x="493.9" y="611.0" width="94.4" height="15" fill="#50e450" rx="2" ry="2"/>
<text x="496.9" y="622.0">com/github/..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node16.replace (133 samples, 0.45%)</title><rect x="572.2" y="595.0" width="5.2" height="15" fill="#5aec5a" rx="2" ry="2"/>
<text x="575.2" y="606.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/Arrays.binarySearch (109 samples, 0.36%)</title><rect x="573.1" y="579.0" width="4.3" height="15" fill="#51e551" rx="2" ry="2"/>
<text x="576.1" y="590.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/Arrays.binarySearch0 (109 samples, 0.36%)</title><rect x="573.1" y="563.0" width="4.3" height="15" fill="#34ca34" rx="2" ry="2"/>
<text x="576.1" y="574.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node4.replace (271 samples, 0.91%)</title><rect x="577.4" y="595.0" width="10.7" height="15" fill="#4ce04c" rx="2" ry="2"/>
<text x="580.4" y="606.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node16.findChild (3369 samples, 11.28%)</title><rect x="588.3" y="611.0" width="133.0" height="15" fill="#69fb69" rx="2" ry="2"/>
<text x="591.3" y="622.0">com/github/rohans..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/Arrays.binarySearch (2013 samples, 6.74%)</title><rect x="641.8" y="595.0" width="79.5" height="15" fill="#69fb69" rx="2" ry="2"/>
<text x="644.8" y="606.0">java/util..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/Arrays.binarySearch0 (2013 samples, 6.74%)</title><rect x="641.8" y="579.0" width="79.5" height="15" fill="#5def5d" rx="2" ry="2"/>
<text x="644.8" y="590.0">java/util..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node4.findChild (3123 samples, 10.45%)</title><rect x="721.4" y="611.0" width="123.4" height="15" fill="#43d743" rx="2" ry="2"/>
<text x="724.4" y="622.0">com/github/roha..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/Node48.findChild (728 samples, 2.44%)</title><rect x="844.8" y="611.0" width="28.8" height="15" fill="#5ef05e" rx="2" ry="2"/>
<text x="847.8" y="622.0">co..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (3667 samples, 12.28%)</title><rect x="873.6" y="611.0" width="144.8" height="15" fill="#eb6565" rx="2" ry="2"/>
<text x="876.6" y="622.0">itable stub</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>jlong_disjoint_arraycopy (319 samples, 1.07%)</title><rect x="1018.4" y="627.0" width="12.6" height="15" fill="#db4e4e" rx="2" ry="2"/>
<text x="1021.4" y="638.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/FixedStringBinaryComparable.get (3017 samples, 10.10%)</title><rect x="1031.0" y="643.0" width="119.2" height="15" fill="#5bed5b" rx="2" ry="2"/>
<text x="1034.0" y="654.0">com/github/roha..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/github/rohansuri/art/FixedStringBinaryComparable.get (3017 samples, 10.10%)</title><rect x="1031.0" y="627.0" width="119.2" height="15" fill="#3bd13b" rx="2" ry="2"/>
<text x="1034.0" y="638.0">com/github/roha..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/lang/String.getBytes (3017 samples, 10.10%)</title><rect x="1031.0" y="611.0" width="119.2" height="15" fill="#4ce04c" rx="2" ry="2"/>
<text x="1034.0" y="622.0">java/lang/Strin..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/lang/StringCoding.encode (3017 samples, 10.10%)</title><rect x="1031.0" y="595.0" width="119.2" height="15" fill="#66f866" rx="2" ry="2"/>
<text x="1034.0" y="606.0">java/lang/Strin..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/lang/StringCoding.encodeUTF8 (3017 samples, 10.10%)</title><rect x="1031.0" y="579.0" width="119.2" height="15" fill="#63f563" rx="2" ry="2"/>
<text x="1034.0" y="590.0">java/lang/Strin..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/Arrays.copyOf (3017 samples, 10.10%)</title><rect x="1031.0" y="563.0" width="119.2" height="15" fill="#45da45" rx="2" ry="2"/>
<text x="1034.0" y="574.0">java/util/Array..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>org/openjdk/jmh/infra/Blackhole.consume (113 samples, 0.38%)</title><rect x="1145.7" y="547.0" width="4.5" height="15" fill="#3fd43f" rx="2" ry="2"/>
<text x="1148.7" y="558.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>org/openjdk/jmh/infra/Blackhole.consume (150 samples, 0.50%)</title><rect x="1150.2" y="659.0" width="5.9" height="15" fill="#67f967" rx="2" ry="2"/>
<text x="1153.2" y="670.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>start_thread (853 samples, 2.86%)</title><rect x="1156.3" y="899.0" width="33.7" height="15" fill="#db4e4e" rx="2" ry="2"/>
<text x="1159.3" y="910.0">st..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>thread_native_entry(Thread*) (853 samples, 2.86%)</title><rect x="1156.3" y="883.0" width="33.7" height="15" fill="#ed6868" rx="2" ry="2"/>
<text x="1159.3" y="894.0">th..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::call_run() (853 samples, 2.86%)</title><rect x="1156.3" y="867.0" width="33.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.3" y="878.0">Th..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>GangWorker::loop() (810 samples, 2.71%)</title><rect x="1157.1" y="851.0" width="32.0" height="15" fill="#cfcf3d" rx="2" ry="2"/>
<text x="1160.1" y="862.0">Ga..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>G1ParTask::work(unsigned int) (784 samples, 2.62%)</title><rect x="1157.6" y="835.0" width="31.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1160.6" y="846.0">G1..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>G1ParEvacuateFollowersClosure::do_void() (772 samples, 2.58%)</title><rect x="1157.6" y="819.0" width="30.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1160.6" y="830.0">G1..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>G1ParScanThreadState::trim_queue() (765 samples, 2.56%)</title><rect x="1157.8" y="803.0" width="30.2" height="15" fill="#c7c73a" rx="2" ry="2"/>
<text x="1160.8" y="814.0">G1..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (515 samples, 1.72%)</title><rect x="1166.5" y="787.0" width="20.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.5" y="798.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (126 samples, 0.42%)</title><rect x="1180.2" y="771.0" width="5.0" height="15" fill="#c4c439" rx="2" ry="2"/>
<text x="1183.2" y="782.0"></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;ObjArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (41 samples, 0.14%)</title><rect x="1185.2" y="771.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.2" y="782.0"></text>
</g>
</svg>
